service: websocket

custom:
  stage: ${opt:stage, 'dev'}
  appWebsocketApiName: AppWebsocketApi-${self:custom.stage}
  jwtSigningSecret: ${param:jwtSigningSecret}
  customDomain:
    domainName: ws.${self:custom.stage}.${param:rootDomain}
    basePath: ${self:custom.stage}
    certificateName: ${self:custom.stage}.${param:rootDomain}
    createRoute53Record: true
    createRoute53IPv6Record: true
    endpointType: REGIONAL
    securityPolicy: tls_1_2
    apiType: websocket
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules:
      forceExclude:
        - aws-sdk
    packager: 'yarn'

plugins:
  - serverless-webpack
  - serverless-domain-manager

provider:
  name: aws
  runtime: nodejs16.x
  region: us-east-1
  websocketsApiName: ${self:custom.appWebsocketApiName}
  websocketsApiRouteSelectionExpression: $request.body.action
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    JWT_SIGNING_SECRET: ${self:custom.jwtSigningSecret}

functions:
  authorizer:
    handler: src/entry/websocket/authorizer.handler
  connect:
    handler: src/entry/websocket/connect.handler
    events:
      - websocket:
          route: $connect
          authorizer:
            name: authorizer
            identitySource:
              - 'route.request.querystring.Auth'

resources:
  Outputs:
    appWebsocketApiId:
      Value:
        Ref: WebsocketsApi
      Export:
        Name: appWebsocketApiId
